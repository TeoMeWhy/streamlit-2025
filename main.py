import streamlit as st
import pandas as pd

def calc_general_stats(df:pd.DataFrame):
    df_data = df.groupby(by="Data")[["Valor"]].sum()
    df_data["lag_1"] = df_data["Valor"].shift(1)
    df_data["Diferen√ßa Mensal Abs."] = df_data["Valor"] - df_data["lag_1"]
    df_data["M√©dia 6M Diferen√ßa Mensal Abs."] = df_data["Diferen√ßa Mensal Abs."].rolling(6).mean()
    df_data["M√©dia 12M Diferen√ßa Mensal Abs."] = df_data["Diferen√ßa Mensal Abs."].rolling(12).mean()
    df_data["M√©dia 24M Diferen√ßa Mensal Abs."] = df_data["Diferen√ßa Mensal Abs."].rolling(24).mean()
    df_data["Diferen√ßa Mensal Rel."] = df_data["Valor"] / df_data["lag_1"] - 1
    df_data["Evolu√ß√£o 6M Total"] = df_data["Valor"].rolling(6).apply(lambda x: x[-1] - x[0])
    df_data["Evolu√ß√£o 12M Total"] = df_data["Valor"].rolling(12).apply(lambda x: x[-1] - x[0])
    df_data["Evolu√ß√£o 24M Total"] = df_data["Valor"].rolling(24).apply(lambda x: x[-1] - x[0])
    df_data["Evolu√ß√£o 6M Relativa"] = df_data["Valor"].rolling(6).apply(lambda x: x[-1] / x[0] - 1)
    df_data["Evolu√ß√£o 12M Relativa"] = df_data["Valor"].rolling(12).apply(lambda x: x[-1] / x[0] - 1)
    df_data["Evolu√ß√£o 24M Relativa"] = df_data["Valor"].rolling(24).apply(lambda x: x[-1] / x[0] - 1)

    df_data = df_data.drop("lag_1", axis=1)

    return df_data

st.set_page_config(page_title="Finan√ßas", page_icon="üí∞")

st.markdown("""
# Boas vindas!

## Nosso APP Financeiro!
            
Espero que voc√™ curta a experi√™ncia da nossa solu√ß√£o para organiza√ß√£o financeira.
            
""")

# Widget de upload de dados
file_upload = st.file_uploader(label="Fa√ßa upload dos dados aqui", type=['csv'])

# Verifica se algum arquivo foi feito upload
if file_upload:
    
    # Leitura dos dados
    df = pd.read_csv(file_upload)
    df["Data"] = pd.to_datetime(df["Data"], format="%d/%m/%Y").dt.date
    
    # Exibi√ß√£o dos dados no App
    exp1 = st.expander("Dados Brutos")
    columns_fmt = {"Valor":st.column_config.NumberColumn("Valor", format="R$ %f")}
    exp1.dataframe(df, hide_index=True, column_config=columns_fmt)

    # Vis√£o Institui√ß√£o
    exp2 = st.expander("Institui√ß√µes")
    df_instituicao = df.pivot_table(index="Data", columns="Institui√ß√£o", values="Valor")

    # Abas para diferentes visualiza√ß√µes
    tab_data, tab_history, tab_share = exp2.tabs(["Dados", "Hist√≥rico", "Distribui√ß√£o"])

    # Exibe Dataframe
    tab_data.dataframe(df_instituicao)
    
    # Exibe Hist√≥rico
    with tab_history:
        st.line_chart(df_instituicao)

    # Exibe distribui√ß√£o
    with tab_share:

        # Filtro de data
        date = st.selectbox("Filtro Data", options=df_instituicao.index)

        # Gr√°fico de distribui√ß√£o
        st.bar_chart(df_instituicao.loc[date])

    # Expander de estat√≠sticas gerais
    exp3 = st.expander("Estat√≠sticas Gerais")
    
    # calcula as estat√≠sticas com base na fun√ß√£o que criamos
    df_stats = calc_general_stats(df)
    
    # Formata as colunas de uma maneira que seja mais f√°cil ler no dataframe
    columns_config = {
        "Valor": st.column_config.NumberColumn("Valor", format='R$ %.2f'),
        "Diferen√ßa Mensal Abs.": st.column_config.NumberColumn("Diferen√ßa Mensal Abs.", format='R$ %.2f'),
        "M√©dia 6M Diferen√ßa Mensal Abs.": st.column_config.NumberColumn("M√©dia 6M Diferen√ßa Mensal Abs.", format='R$ %.2f'),
        "M√©dia 12M Diferen√ßa Mensal Abs.": st.column_config.NumberColumn("M√©dia 12M Diferen√ßa Mensal Abs.", format='R$ %.2f'),
        "M√©dia 24M Diferen√ßa Mensal Abs.": st.column_config.NumberColumn("M√©dia 24M Diferen√ßa Mensal Abs.", format='R$ %.2f'),
        "Evolu√ß√£o 6M Total": st.column_config.NumberColumn("Evolu√ß√£o 6M Total", format='R$ %.2f'),
        "Evolu√ß√£o 12M Total": st.column_config.NumberColumn("Evolu√ß√£o 12M Total", format='R$ %.2f'),
        "Evolu√ß√£o 24M Total": st.column_config.NumberColumn("Evolu√ß√£o 24M Total", format='R$ %.2f'),
        "Diferen√ßa Mensal Rel.": st.column_config.NumberColumn("Diferen√ßa Mensal Rel.", format='percent'),
        "Evolu√ß√£o 6M Relativa": st.column_config.NumberColumn("Evolu√ß√£o 6M Relativa", format='percent'),
        "Evolu√ß√£o 12M Relativa": st.column_config.NumberColumn("Evolu√ß√£o 12M Relativa", format='percent'),
        "Evolu√ß√£o 24M Relativa": st.column_config.NumberColumn("Evolu√ß√£o 24M Relativa", format='percent'),
    }

    # tabs para navegar em diferentes vis√µes e gr√°ficos
    tab_stats, tab_abs, tab_rel = exp3.tabs(tabs=["Dados", "Hist√≥rico de Evolu√ß√£o", "Crescimento Relativo"])

    # aba para dados
    with tab_stats:
        st.dataframe(df_stats, column_config=columns_config)

    # aba para dados de informa√ß√µes absolutas
    with tab_abs:
        abs_cols = [
            "Diferen√ßa Mensal Abs.",
            "M√©dia 6M Diferen√ßa Mensal Abs.",
            "M√©dia 12M Diferen√ßa Mensal Abs.",
            "M√©dia 24M Diferen√ßa Mensal Abs.",
        ]
        st.line_chart(df_stats[abs_cols])

    # aba para dados de informa√ß√µes relativas
    with tab_rel:
        rel_cols = [
            "Diferen√ßa Mensal Rel.",
            "Evolu√ß√£o 6M Relativa",
            "Evolu√ß√£o 12M Relativa",
            "Evolu√ß√£o 24M Relativa",
        ]
        st.line_chart(data=df_stats[rel_cols])

# N√£o tem arquivos...
